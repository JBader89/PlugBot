{
  "name": "lastfmapi",
  "description": "A Last.fm API client library wrapper with a simple and clean interface.",
  "version": "0.0.5",
  "homepage": "https://github.com/maxkueng/node-lastfmapi",
  "author": {
    "name": "Max Kueng",
    "email": "me@maxkueng.com",
    "url": "http://maxkueng.com/"
  },
  "contributors": [
    {
      "name": "Aliou Diallo",
      "url": "http://aliou.me/"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/maxkueng/node-lastfmapi.git"
  },
  "bugs": {
    "url": "https://github.com/maxkueng/node-lastfmapi/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/maxkueng/node-lastfmapi/blob/master/LICENSE"
    }
  ],
  "main": "index",
  "dependencies": {
    "lastfm": "0.8.x"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "keywords": [
    "lastfm",
    "audioscrobbler",
    "scrobbling",
    "scrobble",
    "api"
  ],
  "readme": "LastfmAPI\n=========\n\nThis is a wrapper library for James' [lastfm-node][lastfmnode] module, a\nLast.fm API client for Node.js.  \nIt aims to provide a simpler API for the Last.fm methods with one single\ncallback function instead of an options object with handler methods. It\nalso adds a signature to all methods that require signing automatically.\n\nGetting Started\n---------------\n\nInstall with npm\n\n```sh\nnpm install lastfmapi\n```\n\nor add it to the `dependencies` array in your package.json file. This\nmodule follows the [Semantic Versioning][semver] guidelines so you can\nexpect all sub-versions of the same major version to have a compatible\nAPI.\n\nUse `require` to load the module\n\n```javascript\nvar LastfmAPI = require('lastfmapi');\n```\n\nand create a new instance as follows:\n\n```javascript\nvar lfm = new LastfmAPI({\n\t'api_key' : 'YOUR_API_KEY',\n\t'secret' : 'YOUR_API_SECRET'\n});\n```\n\nTry it out:\n\n```javascript\nlfm.track.getInfo({\n\t'artist' : 'Poliça',\n\t'track' : 'Wandering Star'\n}, function (err, track) {\n\tif (err) { throw err; }\n\tconsole.log(track);\n});\n```\n\nIf you don't already have a Last.fm API account, you can get one\n[here][register].\n\nExamples\n--------\n\n### Authentication for Web Applications\n\n_Check out the authentication example in the examples directory for a working example._\n\nIn order to make signed method calls or use write methods such das\nscrobbling, you need to authenticate your application. Read more about\nweb application authentication [here][webauth].\n\nTo authenticate a user for a web application, first define a callback\nURL (`cb`) that will handle the authentication token. Then create an\nauthentication URL and redirect the user to it.\n\n```javascript\nvar authUrl = lfm.getAuthenticationUrl({ 'cb' : 'http://example.com/auth' });\nconsole.log(authUrl); // redirect the user to this URL\n```\n\nThe URL will look something like\n\"http://www.last.fm/api/auth/?api_key=YOUR_API_KEY&cb=http%3A%2F%2Fexample.com%2Fauth\"\n\nAfter the user has authorized your application, Last.fm will redirect\nthe user to your callback URL. Somethig like\n\"http://example.com/auth?token=THE_AUTHENTICATION_TOKEN\"\n\nThen use the `authenticate` method using the received authentication\ntoken:\n\n```javascript\nlfm.authenticate('THE_AUTHENTICATION_TOKEN', function (err, session) {\n\tif (err) { throw err; }\n\tconsole.log(session); // {\"name\": \"LASTFM_USERNAME\", \"key\": \"THE_USER_SESSION_KEY\"}\n});\n```\n\nThe `authenticate` method is a short-hand function that does\n`auth.getSession` and stores the session credentials in the `LastfmAPI`\nobject using the `setSessionCredentials` method. You could also do the\nsame things manually.  \nThe method will give you an object containing the user's session\ncredentials. It is advised that you save this data to disc for later\nuse. Session keys do not expire.\n\nTo authenticate the user again at a later time, simply set the\ncredentials using `setSessionCredentials` and you are set to make\nauthenticated method calls:\n\n```javascript\nlfm.setSessionCredentials('LASTFM_USERNAME', 'THE_USER_SESSION_KEY');\n```\n\n### Authentication for Desktop Applications\n_(Coming soon)_\n\n### Authentication for Mobile Applications\n_(Coming soon)_\n\n### Scrobbling\n\nThis example requires authentication and assumes you have your session\ncredentials at-the-ready. Look at the\n[authentication](#authentication-for-web-applications) example to see\nhow it works.\n\n```javascript\nvar LastfmAPI = require('lastfmapi');\n\n// Create a new instance\nvar lfm = new LastfmAPI({\n\t'api_key' : 'YOUR_API_KEY',\n\t'secret' : 'YOUR_API_SECRET'\n});\n\nvar mySessionCreds = {\n\t'username' : 'myLastFmUsername',\n\t'key' : 'MY_LASTFM_SESSION_KEY'\n};\n\nlfm.setSessionCredentials(mySessionCreds.username, mySessionCreds.key);\n\n// Scrobble 'Wandering Star' by 'Poliça', 5 minutes ago\nlfm.track.scrobble({\n\t'artist' : 'Poliça',\n\t'track' : 'Wandering Star',\n\t'timestamp' : Math.floor((new Date()).getTime() / 1000) - 300\n\n}, function (err, scrobbles) {\n\tif (err) { return console.log('We\\'re in trouble', err); }\n\n\tconsole.log('We have just scrobbled:', scrobbles);\n});\n```\n\n_(More coming soon)_\n\nDocumentation\n-------------\n\nThe rule of thumb is that when a method has only required parameters, or\none or more required and one optional parameter, they will be\nrepresented in the API as regular function arguments. If the method\ntakes one or more required and multiple optional parameters, the\nfunction will take a `params` object. If all parameters are optional,\nthe `params` object becomes optional.\n\nThe first argument of the callback is always `err`, which is an Error\nobject in case of an error or null if everything went well. The second\nargument is the result.\n\nThe following documentation assumes that `lfm` is an instance of LastfmAPI.\n\n##### `new LastfmAPI(options)`  \n\nThe constructor takes an options object with 2 properties: The `api_key`\nproperty contains your Last.fm API key and `secret` contains your\nLast.fm API secret\n\n##### `lfm.api`  \n\nExposes the underlying [lastfm-node][lastfmnode] API client so you can\ngo \"low-level\" if you like\n\n##### `lfm.getAuthenticationUrl(params)`  \n\nConstructs and returns an authentication URL. The params object has 2\noptional properties: `cb` is the callback URL and `token` is an\nauthentication token\n\n##### `lfm.authenticate(token, callback(err, sessionData))`  \n\nFetches a Last.fm session and stores the session credentials in the\nobject\n\n##### `lfm.setSessionCredentials(username, sessionToken)`  \n\nStores session credentials that will be used to make API calls that\nrequire authentication\n\n##### `lfm.sessionCredentials`  \n\nExposes the session credentials used to make authenticated API calls.\nThe object contains 2 properties: `username` is the Last.fm username and\n`key` is the session key\n\n\nJump: [Album](#album) | [Artist](#artist) | [Auth](#auth) | [Chart](#chart) | [Event](#event) | [Geo](#geo) | [Group](#group) | [Library](#library) | [Playlist](#playlist) | [Radio](#radio) | [Tag](#tag) | [Tasteometer](#tasteometer) | [Track](#track) | [User](#user) | [Venue](#venue)\n\n### Album\n\n##### `lfm.album.addTags(artist, album, tags, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/album.addTags). `tags` can be a string or an array.\n\n##### `lfm.album.getBuylinks(params, callback(err, affiliations))`\n\nSee [docs](http://www.last.fm/api/show/album.getBuylinks) for params.\n\n##### `lfm.album.getInfo(params, callback(err, album))`\n\nSee [docs](http://www.last.fm/api/show/album.getInfo) for params.\n\n##### `lfm.album.getShouts(params, callback(err, shouts))`\n\nSee [docs](http://www.last.fm/api/show/album.getShouts) for params.\n\n##### `lfm.album.getTags(params, callback(err, tags))`\n\nSee [docs](http://www.last.fm/api/show/album.getTags) for params.\n\n##### `lfm.album.getTopTags(params, callback(err, toptags))`\n\nSee [docs](http://www.last.fm/api/show/album.getTopTags) for params.\n\n##### `lfm.album.removeTag(artist, album, tag, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/album.removeTag).\n\n##### `lfm.album.search(params, callback(err, results))`\n\nSee [docs](http://www.last.fm/api/show/album.search) for params.\n\n##### `lfm.album.share(params, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/album.share) for params.\n\n### Artist\n\n##### `lfm.artist.addTags(artist, tags, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/artist.addTags). `tags` can be a string or an array.\n\n##### `lfm.artist.getCorrection(artist, callback(err, corrections))`\n\nSee [docs](http://www.last.fm/api/show/artist.getCorrection).\n\n##### `lfm.artist.getEvents(params, callback(err, events))`\n\nSee [docs](http://www.last.fm/api/show/artist.getEvents) for params.\n\n##### `lfm.artist.getInfo(params, callback(err, artist))`\n\nSee [docs](http://www.last.fm/api/show/artist.getInfo) for params.\n\n##### `lfm.artist.getPastEvents(params, callback(err, events))`\n\nSee [docs](http://www.last.fm/api/show/artist.getPastEvents) for params.\n\n##### `lfm.artist.getPodcast(params, callback(err, rss))`\n\nSee [docs](http://www.last.fm/api/show/artist.getPodcast) for params.\n\n##### `lfm.artist.getShouts(params, callback(err, shouts))`\n\nSee [docs](http://www.last.fm/api/show/artist.getShouts) for params.\n\n##### `lfm.artist.getSimilar(params, callback(err, similarArtists))`\n\nSee [docs](http://www.last.fm/api/show/artist.getSimilar) for params.\n\n##### `lfm.artist.getTags(params, callback(err, tags))`\n\nSee [docs](http://www.last.fm/api/show/artist.getTags) for params.\n\n##### `lfm.artist.getTopAlbums(params, callback(err, topAlbums))`\n\nSee [docs](http://www.last.fm/api/show/artist.getTopAlbums) for params.\n\n##### `lfm.artist.getTopFans(params, callback(err, topFans))`\n\nSee [docs](http://www.last.fm/api/show/artist.getTopFans) for params.\n\n##### `lfm.artist.getTopTags(params, callback(err, topTags))`\n\nSee [docs](http://www.last.fm/api/show/artist.getTopTags) for params.\n\n##### `lfm.artist.getTopTracks(params, callback(err, topTracks))`\n\nSee [docs](http://www.last.fm/api/show/artist.getTopTracks) for params.\n\n##### `lfm.artist.removeTag(artist, tag, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/artist.removeTag).\n\n##### `lfm.artist.search(params, callback(err, results))`\n\nSee [docs](http://www.last.fm/api/show/artist.search) for params.\n\n##### `lfm.artist.share(params, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/artist.share) for params. `params.recipient` can be a string or an array.\n\n##### `lfm.artist.shout(artist, message, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/artist.shout).\n\n### Auth\n\n##### `lfm.auth.getMobileSession(username, password, callback(err, session))`\n\nSee [docs](http://www.last.fm/api/show/auth.getMobileSession).\n\n##### `lfm.auth.getSession(token, callback(err, session))`\n\nSee [docs](http://www.last.fm/api/show/auth.getSession).\n\n##### `lfm.auth.getToken(callback(err, token))`\n\nSee [docs](http://www.last.fm/api/show/auth.getToken).\n\n###Chart\n\n##### `lfm.chart.getHypedArtists([params,] callback(err, artists))`\n\nSee [docs](http://www.last.fm/api/show/chart.getHypedArtists) for params. `params` is optional.\n\n##### `lfm.chart.getHypedTracks([params,] callback(err, tracks))`\n\nSee [docs](http://www.last.fm/api/show/chart.getHypedTracks) for params. `params` is optional.\n\n##### `lfm.chart.getLovedTracks([params,] callback(err, tracks))`\n\nSee [docs](http://www.last.fm/api/show/chart.getLovedTracks) for params. `params` is optional.\n\n##### `lfm.chart.getTopArtists([params,] callback(err, artists))`\n\nSee [docs](http://www.last.fm/api/show/chart.getTopArtists) for params. `params` is optional.\n\n##### `lfm.chart.getTopTags([params,] callback(err, tags))`\n\nSee [docs](http://www.last.fm/api/show/chart.getTopTags) for params. `params` is optional.\n\n##### `lfm.chart.getTopTracks([params,] callback(err, tracks))`\n\nSee [docs](http://www.last.fm/api/show/chart.getTopTracks) for params. `params` is optional.\n\n### Event\n\n##### `lfm.event.attend(eventId, status, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/event.attend) for `status`.\n\n##### `lfm.event.getAttendees(params, callback(err, attendees))`\n\nSee [docs](http://www.last.fm/api/show/event.getAttendees) for params.\n\n##### `lfm.event.getInfo(eventId, callback(err, event))`\n\nSee [docs](http://www.last.fm/api/show/event.getInfo).\n\n##### `lfm.event.getShouts(params, callback(err, shouts))`\n\nSee [docs](http://www.last.fm/api/show/event.getShouts) for params.\n\n##### `lfm.event.share(params, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/event.share) for params. `params.recipient` can be a string or an array.\n\n##### `lfm.event.shout(eventId, message, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/event.shout).\n\n### Geo\n\n##### `lfm.geo.getEvents(params, callback(err, events))`\n\nSee [docs](http://www.last.fm/api/show/geo.getEvents) for params.\n\n##### `lfm.geo.getMetroArtistChart(params, callback(err, topArtists))`\n\nSee [docs](http://www.last.fm/api/show/geo.getMetroArtistChart) for params.\n\n##### `lfm.geo.getMetroHypeArtistChart(params, callback(err, topArtists))`\n\nSee [docs](http://www.last.fm/api/show/geo.getMetroHypeArtistChart) for params.\n\n##### `lfm.geo.getMetroHypeTrackChart(params, callback(err, topTracks))`\n\nSee [docs](http://www.last.fm/api/show/geo.getMetroHypeTrackChart) for params.\n\n##### `lfm.geo.getMetroTrackChart(params, callback(err, topTracks))`\n\nSee [docs](http://www.last.fm/api/show/geo.getMetroTrackChart) for params.\n\n##### `lfm.geo.getMetroUniqueArtistChart(params, callback(err, topArtists))`\n\nSee [docs](http://www.last.fm/api/show/geo.getMetroUniqueArtistChart) for params.\n\n##### `lfm.geo.getMetroUniqueTrackChart(params, callback(err, topTracks))`\n\nSee [docs](http://www.last.fm/api/show/geo.getMetroUniqueTrackChart) for params.\n\n##### `lfm.geo.getMetroWeeklyChartlist(metro, callback(err, weeklyChartList))`\n\nSee [docs](http://www.last.fm/api/show/geo.getMetroWeeklyChartlist).\n\n##### `lfm.geo.getMetros([country,] callback(err, metros))`\n\nSee [docs](http://www.last.fm/api/show/geo.getMetros). `country` is optional and, if provided, must be an ISO 3166-1 country name.\n\n##### `lfm.geo.getTopArtists(params, callback(err, topArtists))`\n\nSee [docs](http://www.last.fm/api/show/geo.getTopArtists) for params.\n\n##### `lfm.geo.getTopTracks(params, callback(err, topTracks))`\n\nSee [docs](http://www.last.fm/api/show/geo.getTopTracks) for params.\n\n### Group\n\n##### `lfm.group.getHype(group, callback(err, weeklyArtistChart))`\n\nSee [docs](http://www.last.fm/api/show/group.getHype).\n\n##### `lfm.group.getMembers(params, callback(err, members))`\n\nSee [docs](http://www.last.fm/api/show/group.getMembers) for params.\n\n##### `lfm.group.getWeeklyAlbumChart(params, callback(err, weeklyAlbumChart))`\n\nSee [docs](http://www.last.fm/api/show/group.getWeeklyAlbumChart) for params.\n\n##### `lfm.group.getWeeklyArtistChart(params, callback(err, weeklyArtistChart))`\n\nSee [docs](http://www.last.fm/api/show/group.getWeeklyArtistChart) for params.\n\n##### `lfm.group.getWeeklyChartList(group, callback(err, weeklyChartList))`\n\nSee [docs](http://www.last.fm/api/show/group.getWeeklyChartList).\n\n##### `lfm.group.getWeeklyTrackChart(params, callback(err, weeklyTrackChart))`\n\nSee [docs](http://www.last.fm/api/show/group.getWeeklyTrackChart) for params.\n\n### Library\n\n##### `lfm.library.addAlbum(artist, album, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/library.addAlbum).\n\n##### `lfm.library.addArtist(artist, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/library.addArtist).\n\n##### `lfm.library.addTrack(artist, track, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/library.addTrack).\n\n##### `lfm.library.getAlbums(params, callback(err, albums))`\n\nSee [docs](http://www.last.fm/api/show/library.getAlbums) for params.\n\n##### `lfm.library.getArtists(params, callback(err, artists))`\n\nSee [docs](http://www.last.fm/api/show/library.getArtists) for params.\n\n##### `lfm.library.getTracks(params, callback(err, tracks))`\n\nSee [docs](http://www.last.fm/api/show/library.getTracks) for params.\n\n##### `lfm.library.removeAlbum(artist, album, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/library.removeAlbum).\n\n##### `lfm.library.removeArtist(artist, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/library.removeArtist).\n\n##### `lfm.library.removeScrobble(artist, track, timestamp, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/library.removeScrobble).\n\n##### `lfm.library.removeTrack(artist, track, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/library.removeTrack).\n\n### Playlist\n\n##### `lfm.playlist.addTrack(playlistId, artist, track, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/playlist.addTrack).\n\n##### `lfm.playlist.create([params,] callback(err, playlists))`\n\nSee [docs](http://www.last.fm/api/show/playlist.create) for params.  `params` is optional.\n\n### Radio\n\n_Note: The radio methods have not been tested because Last.fm Radio is\nno longer available in my country._\n\n##### `lfm.radio.getPlaylist([params,] callback(err, playlist))`\n\nSee [docs](http://www.last.fm/api/show/radio.getPlaylist) for params. `params` is optional.\n\n##### `lfm.radio.search(name, callback(err, stations))`\n\nSee [docs](http://www.last.fm/api/show/radio.search).\n\n##### `lfm.radio.tune(station, [lang,] callback(err, station))`\n\nSee [docs](http://www.last.fm/api/show/radio.tune). `lang` is optional and, if provided, must be an ISO 639 alpha-2 language code.\n\n### Tag\n\n##### `lfm.tag.getInfo(tag, [lang,] callback(err, tag))`\n\nSee [docs](http://www.last.fm/api/show/tag.getInfo). `lang` is optional and, if provided, must be an ISO 639 alpha-2 language code.\n\n##### `lfm.tag.getSimilar(tag, callback(err, similarTags))`\n\nSee [docs](http://www.last.fm/api/show/tag.getSimilar).\n\n##### `lfm.tag.getTopAlbums(params, callback(err, topAlbums))`\n\nSee [docs](http://www.last.fm/api/show/tag.getTopAlbums) for params.\n\n##### `lfm.tag.getTopArtists(params, callback(err, topArtists))`\n\nSee [docs](http://www.last.fm/api/show/tag.getTopArtists) for params.\n\n##### `lfm.tag.getTopTags(callback(err, topTags))`\n\nSee [docs](http://www.last.fm/api/show/tag.getTopTags).\n\n##### `lfm.tag.getTopTracks(params, callback(err, topTracks))`\n\nSee [docs](http://www.last.fm/api/show/tag.getTopTracks) for params.\n\n##### `lfm.tag.getWeeklyArtistChart(params, callback(err, weeklyChartList))`\n\nSee [docs](http://www.last.fm/api/show/tag.getWeeklyArtistChart) for params.\n\n##### `lfm.tag.getWeeklyChartList(tag, callback(err, weeklyChartList))`\n\nSee [docs](http://www.last.fm/api/show/tag.getWeeklyChartList).\n\n##### `lfm.tag.search(params, callback(err, results))`\n\nSee [docs](http://www.last.fm/api/show/tag.search) for params.\n\n### Tasteometer\n\n##### `lfm.tasteometer.compare(params, callback(err, comparison))`\n\nSee [docs](http://www.last.fm/api/show/tasteometer.compare) for params.\n\n### Track\n\n##### `lfm.track.addTags(artist, track, tags, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/track.addTags). `tags` can be a string or an array.\n\n##### `lfm.track.ban(artist, track, callback(err))`\n\n##### `lfm.track.getBuylinks(params, callback(err, affiliations))`\n\nSee [docs](http://www.last.fm/api/show/track.getBuylinks) for params.\n\n##### `lfm.track.getCorrection(artist, track, callback(err, corrections))`\n\nSee [docs](http://www.last.fm/api/show/track.getCorrection).\n\n##### `lfm.track.getFingerprintMetadata(fingerprintId, callback(err, tracks))`\n\nSee [docs](http://www.last.fm/api/show/track.getFingerprintMetadata).\n\n##### `lfm.track.getInfo(params, callback(err, track))`\n\nSee [docs](http://www.last.fm/api/show/track.getInfo) for params.\n\n##### `lfm.track.getShouts(params, callback(err, shouts))`\n\nSee [docs](http://www.last.fm/api/show/track.getShouts) for params.\n\n##### `lfm.track.getSimilar(params, callback(err, similarTracks))`\n\nSee [docs](http://www.last.fm/api/show/track.getSimilar) for params.\n\n##### `lfm.track.getTags(params, callback(err, tags))`\n\nSee [docs](http://www.last.fm/api/show/track.getTags) for params.\n\n##### `lfm.track.getTopFans(params, callback(err, topFans))`\n\nSee [docs](http://www.last.fm/api/show/track.getTopFans) for params.\n\n##### `lfm.track.getTopTags(params, callback(err, topTags))`\n\nSee [docs](http://www.last.fm/api/show/track.getTopTags) for params.\n\n##### `lfm.track.love(params, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/track.love) for params.\n\n##### `lfm.track.removeTag(artist, track, tag, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/track.removeTag).\n\n##### `lfm.track.scrobble(params, callback(err, scrobbles))`\n\nSee [docs](http://www.last.fm/api/show/track.scrobble) for params.\n`params` can be an array of scrobble parameters to scrobble multiple\ntracks at once.\n\n##### `lfm.track.search(params, callback(err, results))`\n\nSee [docs](http://www.last.fm/api/show/track.search) for params.\n\n##### `lfm.track.share(params, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/track.share) for params.  `params.recipient` can be a string or an array.\n\n##### `lfm.track.unban(artist, track, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/track.unban).\n\n##### `lfm.track.unlove(artist, track, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/track.unlove).\n\n##### `lfm.track.updateNowPlaying(params, callback(err, nowPlaying))`\n\nSee [docs](http://www.last.fm/api/show/track.updateNowPlaying) for params.\n\n### User\n\n##### `lfm.user.getArtistTracks(params, callback(err, artistTracks))`\n\nSee [docs](http://www.last.fm/api/show/user.getArtistTracks) for params.\n\n##### `lfm.user.getBannedTracks(params, callback(err, bannedTracks))`\n\nSee [docs](http://www.last.fm/api/show/user.getBannedTracks) for params.\n\n##### `lfm.user.getEvents(params, callback(err, events))`\n\nSee [docs](http://www.last.fm/api/show/user.getEvents) for params.\n\n##### `lfm.user.getFriends(params, callback(err, friends))`\n\nSee [docs](http://www.last.fm/api/show/user.getFriends) for params.\n\n##### `lfm.user.getInfo([user,] callback(err, info))`\n\nSee [docs](http://www.last.fm/api/show/user.getInfo). `user` is optional. However, authentication is required if omitted.\n\n##### `lfm.user.getLovedTracks(params, callback(err, lovedTracks))`\n\nSee [docs](http://www.last.fm/api/show/user.getLovedTracks) for params.\n\n##### `lfm.user.getNeighbours(user, [limit,] callback(err, neighbours))`\n\nSee [docs](http://www.last.fm/api/show/user.getNeighbours). `limit` is optional.\n\n##### `lfm.user.getNewReleases(user, [useRecs,] callback(err, albums))`\n\nSee [docs](http://www.last.fm/api/show/user.getNewReleases) for params.  `useRecs` is optional.\n\n##### `lfm.user.getPastEvents(params, callback(err, events))`\n\nSee [docs](http://www.last.fm/api/show/user.getPastEvents) for params.\n\n##### `lfm.user.getPersonalTags(params, callback(err, taggings))`\n\nSee [docs](http://www.last.fm/api/show/user.getPersonalTags) for params.\n\n##### `lfm.user.getPlaylists(user, callback(err, playlists))`\n\nSee [docs](http://www.last.fm/api/show/user.getPlaylists).\n\n##### `lfm.user.getRecentStations(params, callback(err, recentStations))`\n\nSee [docs](http://www.last.fm/api/show/user.getRecentStations) for params.\n\n##### `lfm.user.getRecentTracks(params, callback(err, recentTracks))`\n\nSee [docs](http://www.last.fm/api/show/user.getRecentTracks) for params.\n\n##### `lfm.user.getRecommendedArtists(params, callback(err, recommendations))`\n\nSee [docs](http://www.last.fm/api/show/user.getRecommendedArtists) for params.\n\n##### `lfm.user.getRecommendedEvents(params, callback(err, events))`\n\nSee [docs](http://www.last.fm/api/show/user.getRecommendedEvents) for params.\n\n##### `lfm.user.getShouts(params, callback(err, shouts))`\n\nSee [docs](http://www.last.fm/api/show/user.getShouts) for params.\n\n##### `lfm.user.getTopAlbums(params, callback(err, topAlbums))`\n\nSee [docs](http://www.last.fm/api/show/user.getTopAlbums) for params.\n\n##### `lfm.user.getTopArtists(params, callback(err, topArtists))`\n\nSee [docs](http://www.last.fm/api/show/user.getTopArtists) for params.\n\n##### `lfm.user.getTopTags(user, [limit,] callback(err, topTags))`\n\nSee [docs](http://www.last.fm/api/show/user.getTopTags). `limit` is optional.\n\n##### `lfm.user.getTopTracks(params, callback(err, topTracks))`\n\nSee [docs](http://www.last.fm/api/show/user.getTopTracks) for params.\n\n##### `lfm.user.getWeeklyAlbumChart(params, callback(err, weeklyAlbumChart))`\n\nSee [docs](http://www.last.fm/api/show/user.getWeeklyAlbumChart) for params.\n\n##### `lfm.user.getWeeklyArtistChart(params, callback(err, weeklyArtistChart))`\n\nSee [docs](http://www.last.fm/api/show/user.getWeeklyArtistChart) for params.\n\n##### `lfm.user.getWeeklyChartList(user, callback(err, weeklyChartList))`\n\nSee [docs](http://www.last.fm/api/show/user.getWeeklyChartList).\n\n##### `lfm.user.getWeeklyTrackChart(params, callback(err, weeklyTrackChart))`\n\nSee [docs](http://www.last.fm/api/show/user.getWeeklyTrackChart) for params.\n\n##### `lfm.user.shout(user, message, callback(err))`\n\nSee [docs](http://www.last.fm/api/show/user.shout).\n\n### Venue\n\n##### `lfm.venue.getEvents(venueId, [festivalsOnly,] callback(err, events))`\n\nSee [docs](http://www.last.fm/api/show/venue.getEvents). `festivalsOnly` is optional.\n\n##### `lfm.venue.getPastEvents(params, callback(err, events))`\n\nSee [docs](http://www.last.fm/api/show/venue.getPastEvents) for params.\n\n##### `lfm.venue.search(params, callback(err, results))`\n\nContributors\n------------\n\n - Max Kueng (http://maxkueng.com/)\n - Aliou Diallo (http://aliou.me/)\n\nLicense\n-------\n\nCopyright (c) 2013 Max Kueng\nLicensed under the MIT license.\n\n\n[lastfmnode]: https://github.com/jammus/lastfm-node\n[semver]: http://semver.org/\n[register]: http://www.last.fm/api/account/create\n[webauth]: http://www.last.fm/api/webauth\n",
  "readmeFilename": "README.md",
  "_id": "lastfmapi@0.0.5",
  "dist": {
    "shasum": "ad9d9abb47ea27ba31b55f5e3031eb51402dacce",
    "tarball": "http://registry.npmjs.org/lastfmapi/-/lastfmapi-0.0.5.tgz"
  },
  "_from": "lastfmapi@",
  "_npmVersion": "1.3.8",
  "_npmUser": {
    "name": "maxkueng",
    "email": "me@maxkueng.com"
  },
  "maintainers": [
    {
      "name": "maxkueng",
      "email": "me@maxkueng.com"
    }
  ],
  "directories": {},
  "_shasum": "ad9d9abb47ea27ba31b55f5e3031eb51402dacce",
  "_resolved": "https://registry.npmjs.org/lastfmapi/-/lastfmapi-0.0.5.tgz"
}
